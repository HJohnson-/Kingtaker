<?xml version="1.0" encoding="UTF-8"?>
<project name="module_kingtaker" default="compile.module.kingtaker">
  <dirname property="module.kingtaker.basedir" file="${ant.file.module_kingtaker}"/>
  
  <property name="module.jdk.home.kingtaker" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.kingtaker" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.kingtaker" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.kingtaker" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="kingtaker.output.dir" value="${module.kingtaker.basedir}/out/production/Kingtaker"/>
  <property name="kingtaker.testoutput.dir" value="${module.kingtaker.basedir}/out/test/Kingtaker"/>
  
  <path id="kingtaker.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="kingtaker.module.production.classpath">
    <path refid="${module.jdk.classpath.kingtaker}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>
  
  <path id="kingtaker.runtime.production.module.classpath">
    <pathelement location="${kingtaker.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>
  
  <path id="kingtaker.module.classpath">
    <path refid="${module.jdk.classpath.kingtaker}"/>
    <pathelement location="${kingtaker.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>
  
  <path id="kingtaker.runtime.module.classpath">
    <pathelement location="${kingtaker.testoutput.dir}"/>
    <pathelement location="${kingtaker.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.kingtaker">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.kingtaker">
    <patternset refid="excluded.from.module.kingtaker"/>
  </patternset>
  
  <path id="kingtaker.module.sourcepath">
    <dirset dir="${module.kingtaker.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.kingtaker" depends="compile.module.kingtaker.production,compile.module.kingtaker.tests" description="Compile module Kingtaker"/>
  
  <target name="compile.module.kingtaker.production" depends="register.custom.compilers" description="Compile module Kingtaker; production classes">
    <mkdir dir="${kingtaker.output.dir}"/>
    <javac2 destdir="${kingtaker.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.kingtaker}/javac">
      <compilerarg line="${compiler.args.kingtaker}"/>
      <bootclasspath refid="kingtaker.module.bootclasspath"/>
      <classpath refid="kingtaker.module.production.classpath"/>
      <src refid="kingtaker.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.kingtaker"/>
    </javac2>
    
    <copy todir="${kingtaker.output.dir}">
      <fileset dir="${module.kingtaker.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.kingtaker.tests" depends="register.custom.compilers,compile.module.kingtaker.production" description="compile module Kingtaker; test classes" unless="skip.tests"/>
  
  <target name="clean.module.kingtaker" description="cleanup module">
    <delete dir="${kingtaker.output.dir}"/>
    <delete dir="${kingtaker.testoutput.dir}"/>
  </target>
</project>